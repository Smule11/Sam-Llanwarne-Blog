[
  {
    "objectID": "academicFormations/contents/index.html",
    "href": "academicFormations/contents/index.html",
    "title": "Contents of my Thesis",
    "section": "",
    "text": "The contents of my main project, with each section broken down into multiple enumerated entries posted here.\nEach section will fall under a specific desired outcome, which will sit inside a relevant Chapter.\n\nLinks to guides on thesis structures and contents I read:\n\n\n\n\nhttps://www.mines.edu/graduate-studies/wp-content/uploads/sites/60/2018/02/GS_Journal_Paper_Format.pdf\n\n\n\n\n\n\nhttps://www.oxfordechoes.com/oxford-thesis-template/toc/\n\n\n\n\n\n\nhttps://uwm.edu/graduateschool/wp-content/uploads/sites/519/2020/08/thesis-and-dissertation-formatting.pdf\n\n\n\n\n\n\nhttps://www.thesishelpers.com/blog/dissertation-table-of-contents/\n\n\n\n\n\nFirst pass at Contents:\n\n\nGeneric Template\n\nTitle Page\nAbstract\nAcknowledgements\nContents\nChapter 1: Introduction\n\nBackground and context\nResearch questions or hypotheses\nGoals of the study\n\nChapter 2: Paper 1\n\nIntroduction\nLiterature review\nMethods\nResults\nDiscussion\nConclusion\n\nChapter 3: Paper 2\n\nIntroduction\nLiterature review\nMethods\nResults\nDiscussion\nConclusion\n\nChapter 4: Paper 3\n\nIntroduction\nLiterature review\nMethods\nResults\nDiscussion\nConclusion\n\nChapter 5: Synthesis and general conclusion\n\nSummary of main findings from the three papers\nImplications for future research\nBroader implications of the research\n\nReferences\nAppendices (if applicable)\n\n\n\nProject-specific Template\n\nTitle: Evaluating the effectiveness of applying AI to Immuno-histochemical Lymphoma Histology data for clinical use\nAbstract\nAcknowledgements\nContents\nChapter 1: Introduction\n\nBackground and context\nResearch questions or hypotheses\nGoals of the study\n\nChapter 2: Data reduction and preprocessing, Segmentation and Auto-Encoding\n\nIntroduction\nLiterature review\nMethods\nResults\nDiscussion\nConclusion\n\nChapter 3: IHC Classification and Model choice for Explainability\n\nIntroduction\nLiterature review\nMethods\nResults\nDiscussion\nConclusion\n\nChapter 4: Exploring the data (for Explainability, biomarkers, survival correlation)\n\nIntroduction\nLiterature review\nMethods\nResults\nDiscussion\n\nChapter 5: Classification of Lymphoma Subclass\n\nIntroduction\nLiterature review\nMethods\nResults\nDiscussion\nConclusion\n\nChapter 6: Synthesis and general conclusion\n\nSummary of main findings from the three papers\nImplications for future research\nBroader implications of the research\n\nReferences\nAppendices (if applicable)"
  },
  {
    "objectID": "academicFormations/things-to-write-tags/index.html",
    "href": "academicFormations/things-to-write-tags/index.html",
    "title": "Plan of things I will write about",
    "section": "",
    "text": "Things to write \nHere I discuss things I will write about and plans on structuring the writing.\nEssentially, each post will fit into a Chapter, and contribute to a section such as the Background, Method or Results, and will be leading towards a specific Outcome.\nIn this way, a post could have three tags, situating it specifically somewhere within the wider scope of the project based on the Chapter/Outcome/Section.\nOr the post could simply have a Big Picture tag wherein the post would discuss some overarching concept or plan, or a Meta tag such as this post where I am writing indirectly about the academic content.\n\nEach entry won’t include the data, or the code, but can describe the data and methodology sections will go over the code.\nI intend to have each Chapter starting with a brief problem and desired outcomes. In the background I will go over the problem and potential outcomes as already explored by other researchers in more detail and the results they achieved. For the Method I will go over my approach. Similarly, for the results I will go over my results.\nEach problem will have at least this entry, but might have some sub-entries depending on the amount of work done. I will look to follow other well-established paper formats and thesis formats, in terms of the depth of information conveyed in said papers and theses.\n\n\n\n How to implement a password lock (only allowing certain emails to access the writing) \nI can put the academic blogs behind a landing page which requires a password to access.\nI can have a link on this landing page which gives the password when the reader clicks on it.\nI can choose to only share the link with people who have certain email addresses (OneDrive or Google addresses, etc.)"
  },
  {
    "objectID": "academicFormations.html",
    "href": "academicFormations.html",
    "title": "Academic Formations",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\nLink to PDF\n\n\n\n\n\n\n\nLink\n\n\n\n\n\n\n\n\n\n\n\nJan 6, 2023\n\n\nSam Llanwarne\n\n\n\n\n\n\n  \n\n\n\n\nContents of my Thesis\n\n\n\n\n\n\n\nContents\n\n\n\n\n\n\n\n\n\n\n\nDec 19, 2022\n\n\nSam Llanwarne\n\n\n\n\n\n\n  \n\n\n\n\nPlan of things I will write about\n\n\n\n\n\n\n\nMeta\n\n\n\n\n\n\n\n\n\n\n\nDec 19, 2022\n\n\nSam Llanwarne\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Blog",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\nWork Insights\n\n\n\n\n\n\n\nPlanning\n\n\n\n\n\n\n\n\n\n\n\nJan 7, 2023\n\n\nSam Llanwarne\n\n\n\n\n\n\n  \n\n\n\n\nWriting Tone and Tips Thoughts\n\n\n\n\n\n\n\nMeta\n\n\n\n\n\n\n\n\n\n\n\nJan 5, 2023\n\n\nSam Llanwarne\n\n\n\n\n\n\n  \n\n\n\n\nFuture Blog Post Ideas\n\n\n\n\n\n\n\nPlanning\n\n\n\n\n\n\n\n\n\n\n\nJan 3, 2023\n\n\nSam Llanwarne\n\n\n\n\n\n\n  \n\n\n\n\nTo Do\n\n\n\n\n\n\n\nTo Do\n\n\n\n\n\n\n\n\n\n\n\nDec 19, 2022\n\n\nSam Llanwarne\n\n\n\n\n\n\n  \n\n\n\n\nWelcome!\n\n\n\n\n\n\n\n\n\n\n\n\nDec 15, 2022\n\n\nSam Llanwarne\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "blogPosts/future-blog-post-ideas/index.html",
    "href": "blogPosts/future-blog-post-ideas/index.html",
    "title": "Future Blog Post Ideas",
    "section": "",
    "text": "Other random things to talk about\nMaking stained glass - Like could be a good gift idea or something.\nAlso going to a workshop would be fun as a gift, like pottery is fun too and all that.\n\nhttps://www.wcmanet.org/how-to-make-stained-glass-window/\nhttps://www.youtube.com/watch?v=4jWxYpIRgrw\nhttps://www.youtube.com/watch?v=f6HQIIqgtkI\n\nEtc. etc."
  },
  {
    "objectID": "blogPosts/things-to-do-on-this_website/index.html",
    "href": "blogPosts/things-to-do-on-this_website/index.html",
    "title": "To Do",
    "section": "",
    "text": "To change\nMaking a list of things to do here…\n\nTo add a comments section\nTo understand why .ipynb files throw a soft error while .qmd files are fine.\n\n.ipynb files throw a “listing contains no meta data” error while .qmd files don’t. Also, I think .qmd files don’t auto render when I save but .ipynb do even though I thought I changed that setting. Finally, I hope the .ipynb file doesn’t try and rerun all the cells when I save, as I also changed that setting…\n\nDo the About section\nDo the social links\nDo a .gitignore as it says in the Quarto guide, to reduce the number of commits. Some files don’t matter?\nMaking tabs/sections for different"
  },
  {
    "objectID": "blogPosts/welcome/index.html",
    "href": "blogPosts/welcome/index.html",
    "title": "Welcome!",
    "section": "",
    "text": "Welcome to my blog…\n\nWhy?\n\n\nto practice public writing\nto practice science communication\nto summarise technical work I did\nto summarise How To’s such as this, where I do something once, which is not trivial, and I want to record how to do it, for other people and for future reference\nfor my CV\nas a record of papers I’ve read\nas a log of my thoughts, and to store and organise ideas\nto inspire others to do the same and to create some sort of small, shallow community online of well intentioned people\n\nI also wish to be able to make the blog with minimal effort, while still having a feature rich blog suitable to machine learning coding.\nThis will become the first entry into my blog online. Each entry will be a .ipynb notebook file embedded into this Quarto HTML template.\n    \n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "blogPosts/work-insights/index.html",
    "href": "blogPosts/work-insights/index.html",
    "title": "Work Insights",
    "section": "",
    "text": "Work Insights\nHere I might write down some thoughts I might have about productivity and ineffectiveness…1\nIronically, even though writing this is productive in a sense, I do still feel guilty afterwards that it was procrastinating. Perhaps less guilty than after real procrastination, but also perhaps doing pseudo-work is more sinister as it can take up more time as it might feel like you’re being semi-productive, so it takes longer for you to realise you were not doing making real progress on the key task.\nStrive for virtuous cycles, avoid downward spirals. But sometimes do you need to go down to go up? Some people say avoid extreme dopamine events, so you can enjoy the low dopamine events. There’s a lot of confusion around how you should live your best life. I think you have to figure it out for yourself, but why figure it out yourself when other people might already have the answers? Because listening to others is also hard.\n\n\nWriting or Reading\nMaybe doing anything productive2 is actually productive3. E.g. reading or writing requires mental effort, to varying degrees and so is therefore useful in the long run even if it doesn’t feel useful when you consider you could be doing more important tasks. Essentially, yes do hard tasks first, but also appreciate easy productive tasks.\nDoing fun and easy productive tasks in between hard important tasks:\n\nkeeps you away from downward destructive behaviours like procrastination,\nimproves your ability to do harder, more important tasks,\ncan rejuvenate you in a more sustainable, long term way than procrastinating does.\n\n\n\nSleep is productive\nSleep is productive.\n\n\nTidying\nTidying is a easy, perhaps low priority, productive task. However, while I think I am finding that tidying actually makes the harder more important tasks easier.\n\n\nTime boxing (from Sara)\nYou don’t know how long a task will take. Give yourself any random amount of time, whether 1 min or 2 hours or anything in between, and try your best to do the work. Every task is unique and so you don’t know how much time or effort a task will take. However, they say with practice you get better at estimating the time a task will take or how much time you should give yourself to do something so you stop before you start drifting.\nUltimately, go into each task with your full intention and force of mind. You might find out you fail much more often than you succeed in making progress. If you record how successful you were at completing each task you will soon see how productive you actually are.\n\n\nWhat Jack said about seeing the task as easy…\nIf you see the task as easy, you are more likely to do it.\nWhen you see others do the task easily it can enthuse you, because it evaporates the myth of it being hard. Not sure how, but making things easier helps. This also relates to self-confidence and just not being daunted or paralysed when faced by “hard” tasks. Maybe you can see it as a fun challenge.\n\n\nAppreciate and Disgust\nAppreciate more things which are long term useful. You can loko down on things which are long term detrimental. I would say do this, only if you want to be an active force for productivity in the world. If you don’t care about that, then you may choose to spend your time in unproductive activities which I feel and hypothesise can lead you on a downward spiral to being more unproductive. Socialising, cooking, travelling, playing music, reading, writing, walking are all productive in my book btw.\n\n\nOther tips!\nThese are but just a few random tips I heard from friends or thought of myself… Unfortunately, other wiser people have already spent much more time curating a much more aesthetic and well thought out post describing 100 top tips.\nPlease have a quick look,\nhttps://learn.filtered.com/hubfs/Definitive%20100%20Most%20Useful%20Productivity%20Hacks.pdf\n\nSome highlights here are:\n\n\nHard stuff\nFocus on Outcomes\nEffective above efficient\n8020 rule\nVisualise success\nStart Earlier\nSingle Tasking (practice being fierce and accepting you will fail, and fail less the more you practice)\nTime yourself\nBe Positive\n10,000 hours\nJust Start\nBe On Time\nWrite it Down\nFive goals\nLearn to schedule productive breaks to diffuse if stress comes on, especially paralytic stress.\nBiological primetime\n\n\nBut some things I disagreed with are:\n\n\nProductive procrastination (I definitively don’t agree with the definition of labelling something procrastination if it is productive, see Writing or Reading above.)\nUse your commute (this goes to the beautiful idea of having different spaces for different things, and having a positive environment. I don’t think you can cook in the living room, so maybe you can’t do work work on the commute. But like i said before, you might be able to do some other productive task on the commute, like developing your social life messaging people or blogging or something, or learning a new skill, or duolingo, etc. I do appreciate you have to find it fun, and so don’t overload yourself or chose to do hard tasks when you don’t have to! chose the easy fun way of being productive!)\n\n\n\n\n\n\n\nFootnotes\n\n\nMarkdown does footnotes…↩︎\nin the sense that you are producing something even if it is quite easy and relaxing↩︎\nin the sense that it is contributing to a virtuous cycle wherein you become better at being productive when faced with harder, more important tasks↩︎"
  },
  {
    "objectID": "blogPosts/writing-tone-and-tips/writingTips.html",
    "href": "blogPosts/writing-tone-and-tips/writingTips.html",
    "title": "Writing Tone and Tips Thoughts",
    "section": "",
    "text": "Takeaways from other blogs and this blog related to readability…\n\nAvoid making the reader work?\n\nI find it nice when writing doesn’t trip you up or make you pause in order to understand a new complex idea. Complex ideas can be made easily digestible with good writing.\n\nEnsure the writing flows, and is minimal.\nPictures and aesthetic document structuring can make what text you have interesting and engaging.\nThe reader can leave, typically if they are bored/confused."
  },
  {
    "objectID": "howTo/making-a-blog/index.html",
    "href": "howTo/making-a-blog/index.html",
    "title": "Making a Blog",
    "section": "",
    "text": "Here I try to succinctly explain how I made this blog…\nI am following Bailey’s blog which has led me on a chain through fastai’s nbdev websites and ultimately to Quarto’s blogging website.\n\n\nWhat are these blogging templates, Jekyll, fastai’s nbdev and Quarto?\n\n\n\nJekyll is Githubs default blogging template. FastAI built FastPages to facilitate notebook embedding in Jekyll blogs. Then Quarto came which is a standalone notebook blogging template. FastAI changed their software to run on Quarto rather than Jekyll. You can access Quarto through FastAI’s nbdev package, but I don’t need all the nbdev extra features, so am just using Quarto now.\n\n\nQuarto is, at its heart, just software which slightly tidies up R and Python markdown scripts into cleaner documents, for scientific publishing.\n\n\nThis image shows the Blog folder structure:\n\n\nInstructions\n A) Download and Install Quarto. Create empty github repo and empty local folder.\nI create this .ipynb notebook file, called index.ipynb. \nI installed Quarto.\nI installed the Quarto extension in VS Code (can also do this in R studio, Jupyter or using the terminal),\nI create an empty github repo online, with no readme file.\nI create an empty folder/directory/repo locally/offline with a similar/the same name.\n\n\nAdditional links and thoughts\n\n\n\nI found some of these git commands here and the rest on the github website.\nAlso, to change hard drive, in a windows terminal I google’d it https://www.digitalcitizen.life/command-prompt-how-use-basic-commands/ and it says just to first type D: or C: to change the drive, and then go cd filepath.\nI realised I have to edit the .ipynb notebook file slightly, see here https://quarto.org/docs/tools/vscode.html. I specifically scrolled down to the section on notebooks, Notebook Editor. This gave some of the final information on how to structure the .ipynb or .qmd files.\n\n\n B) Auto-populate local folder and push online\n\nFull instructions here - https://quarto.org/docs/websites/website-blog.html\n\nI open this folder in VS Code.\n do ctrl-shit-p and type Quarto Create Project, click it, click create blog, and create a new folder for the blog files. \nI then go into the terminal and cd into this new folder, and run these commands, to move the local files online.\ngit init \ngit add .\ngit commit -m \"add my files\"\ngit remote add origin <YOUR_NEW_EMPTY_GITHUB_REPO_URL>.git\ngit branch -M main\ngit push -u origin main\nI add some YAML code in the top cell, to tell the Quarto files how to position the notebook in the website. This YAML cell should be first and of the type Raw. Again see the link above on how to do this. \nI then make a folder in the posts folder, and copy this .ipynb notebook file there. It should be called index.ipynb so Quarto knows to publish it.\nApparently I should add a .gitignore to ignore a couple of the crazy folders or something, as they might change a lot.\n C) Finishing touches.\n\nFull instructions here - https://quarto.org/docs/publishing/github-pages.html\n\nI change the _quarto.yml file, to say publish to docs, not in posts. \nI make sure I am in the right folder/directory and add a .nojekyll as they say in the link above. \nI can push the local changes to github online through VS code.\nI change the pages tab in the settings on Github to say publish from the docs folder, making the website go live. \nI changed the theme to have a dark and light one, as in the link above. \nYou can add more .ipynb pages locally on your computer, with the appropriate YAML heading, but then you must Quarto render the site to generate the actual HTML website files (as explained on the website and for me I have to press ctrl-shift-p in VS Code)!\n\n\nAdditional links and thoughts\n\n\n\nThe YAML at the top of each .ipynb or .qmd file controls the appearance of that file. e.g. * tags * contents side bar * date * blog name * potentially the blog summary * position of features, colours etc.\n\n\n\n\n\nOther blogs\nCreating a blog in a template is easier than coding a website yourself, although I still think this is very easy for a basic website. But incorporating more complex features and making it look nicer is easier with a template. Jekyll is one template people use:\n\nRebecca Stone | github code\n[Mary Paterson] (hyperlink) | github code\nFabian Fuchs | github code\n\nBut I agreed with Bailey, that doing a template that centres on .ipynb notebooks rather than straight .md markdown files is slightly better, as notebooks include markdown cells, but also code cells. So you can run code offline and the blog post can be more easily code centred. Also other people can copy the notebook and run it themselves which is useful.\nNbdev Blogs\n\nBailey’s blog.\n\nQuarto blogs\n\nDanielle Navarro | github code\n\nAlso her main website homepage, links to her blog, here | github code\n\nSamantha Csik | github code\n\nA more homemade blog:\n\nChris Frewin basically he says:\n\nfollow your heart\nworking in a startup when you feel a real affinity with it is decent\n\nwork is hard but feels good; great rewards; low risk.\n\nworking for yourself if you want and you have the drive can be the best\n\nwork can be the hardest or the easiest; correspondingly variable rewards; high risk (potentially v good or v bad).\n\nthere’s no real reason to work at a big company except it can make you look “good” to other employers\n\neasiest but not that fulfilling work; a consistent but less than average reward; low risk.\n\n\n\n\n\n\nInitial attempt making the blog\n\n\n\nI went to follow Bailey’s blog which is built using FastAI’s nbdev package! I stopped halfway through and changed to pure Quarto.\nFastAI’s nbdev is a package which includes notebook blogging, which is built on Quarto’s notebook blogging software. Now FastAI say Quarto is simpler to use if you only want to blog, although you will miss other nbdev features.\n\n\nFailed Quick Attempt Which Almost Worked\n\n\n\nI tried a quick method to fork Bailey’s github to my github, creating a new repo, without installing any nbdev software. \nI opened github desktop which is connected to my online github account, and chose to clone the online blog repo to a local folder on my computer. Here I can edit the blog files. \nI edit the files in VS code. There are many other ways to clone a repository to your local device and edit .ipynb files such as in Jupyter and on Google Colab!\nI could do another blog on setting up Github in VS code. Making this blog is a good learning experience with Github too (like any casual sustained effort using something is a good learning experience).\nI then deleted all the current blog .ipynb files in the Blog folder locally, and inserted this file into the nbs folder. Here in VS code I now stage, commit and push the changes to the online repo. \nThe main index file, which is the home page, I should edit.\n I went into the online github repo and the files had been updated. This .ipynb making a blog notebook was there. I then went into settings and on the side found Pages, and chose the branch to make the website active. I chose the main default branch. I refresh the page, the website is live. \nBUT… Things did not work 100% because when I was making the .ipynb blog posts I shouldn’t just copy Bailey’s and make the .ipynb notebooks manually. I should make them with nbdev. This is because the nbdev command to make an ipynb seems to manage and update all the extra files in the repository/folder which embed the notebook in the HTML website.\n\n\nAfter just trying to clone Bailey’s nbdev blog repo, I realised I really should do a new nbdev install to get a new template of the blog in a new repo. When you run new nbdev to populate the empty repo it contains user specific info, so cloning will copy across the old user’s name and stuff. Also you need nbdev to create a notebook, as it simultaneously adjusts other files to recognise this new notebook.\n\n\nHi Chat_GPT, can you explain what nbdev_new is?\n\n\n\n‘nbdev_new’ is a command provided by the ‘nbdev’ library, which is a tool for developing and documenting Python projects using Jupyter notebooks. The ‘nbdev_new’ command is used to create a new project directory structure and initial configuration files for a project that will be developed with ‘nbdev’.\nHere is an example of how to use ‘nbdev_new’ to create a new project:\n$ nbdev_new my_project\nThis will create a new directory called ‘my_project’ with the following structure:\nmy_project/\n├── README.md\n├── index.ipynb\n├── docs/\n│   ├── index.ipynb\n├── nbdev/\n│   ├── __init__.py\n│   ├── core.py\n│   ├── tests/\n│   └── ...\n├── setup.py\n└── requirements.txt\nThe ‘README.md’ file contains information about your project, and the ‘index.ipynb’ file is the entry point for your documentation. The ‘docs’ directory contains the source notebooks for your documentation, and the ‘nbdev’ directory contains the source code for your project. The ‘setup.py’ file is used to package your project for distribution, and the ‘requirements.txt’ file lists the dependencies that your project needs.\nYou can then use the ‘nbdev’ library to build and publish your project, as well as to generate documentation from the notebooks in the ‘docs’ directory.\n\n\nI clone the online empty Github repo notebookBlog down to my local computer using Github Desktop. \nUsing Github Desktop to clone a new repo down from Github.com to your local desktop is decently easy, and includes the .git file which connects it with the online branch too which is good.\nSO actually I am growing used to using Github Desktop to clone online repos to my local storage now (after a couple of stop-start hesitations). Bailey cloned it down using the terminal and the git command “git clone …” and this works well too. There are a few other ways to clone an online repo to local storage, the main thing is you want the two folders (online and local offline) to be linked by the .git file.\nWe need to install nbdev, which contains the python command package nbdev_new to instantiate a blog specific to us.\nI realise I should have created a new python environment, so I could fully work out which packages are needed (maybe I already have some installed which I won’t mention here). But I am just using my main environment which already has some packages/modules installed.\nTo see more about nbdev, https://pypi.org/project/nbdev/\nI run pip install nbdev in the terminal. \nThen, still roughly following Bailey’s blog, I cd (change directory) into the empty repo/folder in a terminal, and go into python and run the line -\nnbdev_new \nThings don’t work and I question what I’m doing and go back to the documentation. Here I realise that I am perhaps unnecessarily going through nbdev to use Quarto, and maybe it is simpler to just use Quarto straight. I give up with nbdev and go to use Quarto. I believe it is a little simpler.\n\n\n\nThanks for reading!\n \n \n\nSome useful website links\n\nQuarto\nnbdev\nHTML Colours\nUnsplash - open source images"
  },
  {
    "objectID": "howTo/making-an-app/index.html",
    "href": "howTo/making-an-app/index.html",
    "title": "Making an App",
    "section": "",
    "text": "Here I am recording and going over the steps I took to make an app.\nSo the first thing I am thinking is to make a web app and then publish this in the play store and maybe the app store, as then there is only one code base and it should work on the computer and mobile very well too.\nWeb apps are now growing in capability to match the level of device integration as native apps. These web apps are known as progressive web apps (PWAs).\nBut you can also turn a PWA into a native android app [how? I am looking into this now]. So from one codebase you can have a progressive web app (which is a website which also can be isntalled somehow) and you can also have this packaged as a native app in the play store. Not sure about the apple store, but won’t do that anyway, unless the app was profitable because it costs more.\nI asked chatGPT some questions, and here are it’s answers too.\n\n\nHow to start making a progressive web app?\n\n\nProgressive Web Apps (PWAs) are web applications that are designed to provide a native app-like experience to users. They use modern web technologies to deliver a fast, reliable, and engaging experience on both desktop and mobile devices.\nTo get started with building a Progressive Web App, you’ll need to do the following:\n\nChoose a framework: There are several frameworks and libraries available that can help you build a PWA, such as React, Angular, Vue.js, and more. Choose one that you are comfortable with and that meets the needs of your app.\nSet up a local development environment: You’ll need to set up a local development environment on your computer to build and test your PWA. This typically involves installing a text editor, a local web server, and any necessary dependencies.\nCreate the app structure: Set up the basic structure of your PWA, including the HTML, CSS, and JavaScript files that will make up the app. You can use a template or start from scratch, depending on your preferences and the needs of your app.\nAdd a manifest file: A manifest file is a JSON file that provides metadata about your PWA, such as its name, icons, and theme color. It helps the browser understand how to display and interact with your PWA.\nTest your app: Test your PWA in a web browser to ensure that it works as expected. You can also use tools like Lighthouse to audit your PWA and identify any issues that need to be addressed.\nDeploy your app: Once you’ve tested and debugged your PWA, you can deploy it to a hosting provider or publish it to a platform like the Google Play Store or the Apple App Store.\n\nI hope this helps! Let me know if you have any questions or need more guidance as you build your Progressive Web App.\n\n\n\n\nWhat is the simplest code that encapsulates a complete progressive web app?\n\n\nA Progressive Web App (PWA) is a web application that is designed to provide a native app-like experience to users. It uses modern web technologies to deliver a fast, reliable, and engaging experience on both desktop and mobile devices.\nTo create a basic Progressive Web App, you will need to create the following files:\n\nAn HTML file: This file will contain the markup for the structure and content of your PWA.\nA CSS file: This file will contain the styles for your PWA, including layout, color, and font.\nA JavaScript file: This file will contain the logic and functionality of your PWA.\nA manifest file: This is a JSON file that provides metadata about your PWA, such as its name, icons, and theme color. It helps the browser understand how to display and interact with your PWA.\n\nHere is an example of a simple HTML file for a PWA that displays a greeting:\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>My PWA</title>\n    <link rel=\"manifest\" href=\"/manifest.json\">\n  </head>\n  <body>\n    <h1>Hello, world!</h1>\n  </body>\n</html>\nAnd here is an example of a simple manifest file:\n{\n  \"name\": \"My PWA\",\n  \"short_name\": \"My PWA\",\n  \"start_url\": \"/index.html\",\n  \"display\": \"standalone\",\n  \"theme_color\": \"#ffffff\",\n  \"background_color\": \"#ffffff\",\n  \"icons\": [\n    {\n      \"src\": \"/icon.png\",\n      \"sizes\": \"192x192\",\n      \"type\": \"image/png\"\n    }\n  ]\n}\nThis is just a basic example of a Progressive Web App, and there are many more features and capabilities that you can add to your PWA. I hope this helps! Let me know if you have any questions.\n\n\n\n\nHow to simply publish a PWA on the play store?\n\n\nTo publish a Progressive Web App (PWA) on the Google Play Store, you will need to follow these steps:\n\nCreate a Google Play Developer account: If you don’t already have one, you will need to create a Google Play Developer account to publish your PWA on the Play Store. This requires a one-time fee of $25.\nPackage your PWA as an Android app: You will need to package your PWA as an Android app so that it can be uploaded to the Play Store. There are several tools and libraries available that can help you do this, such as the PWA Builder, Trusted Web Activities, or the Chrome Dev Editor.\nPrepare your app for release: Before you can publish your PWA on the Play Store, you will need to prepare it for release by completing a number of tasks, such as adding an app icon, creating screenshots, and writing a description.\nSubmit your app: Once your PWA is ready for release, you can submit it to the Play Store using the Google Play Console. This involves uploading your app, setting up pricing and distribution, and providing any necessary information about your app.\nTest and publish your app: After you have submitted your PWA, the Google Play team will review it to ensure that it meets their guidelines and standards. If it is approved, it will be published on the Play Store for users to download and install.\n\nI hope this helps! Let me know if you have any questions or need more guidance as you publish your PWA on the Google Play Store.\n\n\n\n\nHow to simply package your PWA as an Android app?\n\n\nTo package a Progressive Web App (PWA) as an Android app, you will need to use a tool or library that can generate an Android Package Kit (APK) file from your PWA. There are several options available for doing this, including the following:\n\nPWA Builder: PWA Builder is an open-source tool that can help you package your PWA as an APK file. It uses Trusted Web Activities (TWAs) to create an Android app that can be installed on a device and launched from the home screen. To use PWA Builder, you will need to upload your PWA’s manifest file and select the options you want, such as the app name, icon, and splash screen.\nTrusted Web Activities: Trusted Web Activities (TWAs) are a way to open a PWA in a full-screen browser window on an Android device, with no browser UI. TWAs are supported by the Google Play Store, so you can publish your PWA as an Android app using TWAs. To create a TWA, you will need to create an Android Studio project, add the Trusted Web Activities library, and configure your PWA’s manifest file.\nChrome Dev Editor: The Chrome Dev Editor is an Integrated Development Environment (IDE) for building and debugging web apps. It includes a feature called “Create Android App” that can package your PWA as an APK file. To use this feature, you will need to open your PWA in the Chrome Dev Editor, select “Create Android App” from the menu, and follow the prompts to configure your app.\n\nI hope this helps! Let me know if you have any questions or need more guidance as you package your PWA as an Android app.\n\n\n\n\nCan you explain what all this about the Trusted Web Activity and Trusted Web Activities are?\n\n\nTrusted Web Activities (TWAs) are a way to integrate web content into a native Android app using the Chrome browser. TWAs allow developers to build apps that use the full capabilities of the web, while still providing the security and user experience of a native app.\nA Trusted Web Activity is a special type of Android activity that can be launched from a native app. It displays web content using a fully-fledged version of Chrome, but without the usual Chrome browser interface. This allows developers to create a seamless user experience, as the web content appears to be part of the native app.\nTo use a Trusted Web Activity, the developer must first create a Digital Asset Links file and host it on their website. This file verifies the association between the website and the native app, and allows the app to be launched as a Trusted Web Activity.\nTWAs are useful for a variety of scenarios, such as displaying web content in a standalone app, creating a hybrid app that combines web and native functionality, or providing web-based access to secure resources. They are also a good choice for developers who want to reuse existing web code in a native app, or who want to take advantage of the latest web technologies.\n\n\nUseful links include:\n\nhttps://developers.google.com/codelabs/pwa-in-play\nhttps://developer.chrome.com/docs/android/trusted-web-activity/\n\nFRAMEWORKS\n\nhttps://stormotion.io/blog/what-framework-to-choose-when-developing-progressive-web-app/\nhttps://www.angularminds.com/blog/article/best-pwa-app-development-frameworks.html\nhttps://bsscommerce.com/blog/best-pwa-framework-angular-vue-react/\n\nOverview:\n\nMake a website. Javascript and HTML5 and all that utility.\nTurn it into a PWA.\n\nNot sure where the features like access the devices storage and stuff come in. Not sure how a website can work offline when you\nPseudo Next Steps:\nNeed bubblewrap to turn PWA into app. This comes with a lot of code dependencies, including node.js, java development kit and android command line tools, along with bubblewrap installation itself.\nMaking just a pwa online, and making it installable, fast, reliable, and feature-rich might be enough of an effort.\nFollowing the bubblewrap steps in link 1 above does seem doable, but at the same time, I am wondering whether it is worthing making the PWA first.\nProbably not, better to just make the most basic app first, and then make a slightly more complex PWA and make that an app, and then make the most complex PWA.\nMaking the app - a logger could be okay, mainly want an API to local storage and microphone."
  },
  {
    "objectID": "howTo/things-to-make-guides-for-tags/index.html",
    "href": "howTo/things-to-make-guides-for-tags/index.html",
    "title": "Plan of entries for this how to guide",
    "section": "",
    "text": "How to guide ideas\nI plan on writing how to guides when I do one off non-trivial things, which would be useful for other people.\nGeneral examples include,\n\nrecreating a simple working version of new AI methods in a easily downloadable and runnable notebook.\ngoing through steps to install software and setting up working environments.\npublishing papers and attending conferences.\n\nSpecific examples to do.\n\nget co-pilot working for coding."
  },
  {
    "objectID": "howTo.html",
    "href": "howTo.html",
    "title": "How To",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\nMaking an App\n\n\n\n\n\n\n\nHow To\n\n\n\n\n\n\n\n\n\n\n\nDec 20, 2022\n\n\nSam Llanwarne\n\n\n\n\n\n\n  \n\n\n\n\nMaking a Blog\n\n\n\n\n\n\n\nHow To\n\n\n\n\n\n\n\n\n\n\n\nDec 19, 2022\n\n\nSam Llanwarne\n\n\n\n\n\n\n  \n\n\n\n\nPlan of entries for this how to guide\n\n\n\n\n\n\n\nMeta\n\n\n\n\n\n\n\n\n\n\n\nDec 19, 2022\n\n\nSam Llanwarne\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Home",
    "section": "",
    "text": "Hi, This is a website collating my thoughts on a variety of (primarily academic) topics.\nI would like to make the topic more accessible, and also to help flatten the speed bumps I have faced by creating simple explainer guides documenting my processes and how I worked around technical and non-technical barriers.\nI also enjoy open-source and collaborative communities which exist in certain areas, as opposed to competitive communities. This blog is me trying to learn how to contribute back to the collaborative communities.\nAlso, it is an outlet where I can use to practice public communication of a sort.\nAfter reading Bailey’s blog it is a nice reminder to come back and revisit mine and improve the mess that this blog is.\n\nPersonally, I have a few sections and a few aims, as follows:\n\n\n\n\n\n\n\nSection\nAim\n\n\n\n\nPaper Summaries\nTo distill a paper into a relevant summary each day\n\n\nAcademic Formations\nTo do 500 words of academic writing publically / day\n\n\nHow To\nTo make a How To guide for each non-trivial task I face\n\n\nBlog\nTo explore more nebulous thoughts about AI and I …"
  },
  {
    "objectID": "old_academicFormations.html",
    "href": "old_academicFormations.html",
    "title": "Academic Formations",
    "section": "",
    "text": "Link to PDF\n\n\n\n\n\n\n\nLink\n\n\n\n\n\n\n\n\n\n\n\nJan 6, 2023\n\n\nSam Llanwarne\n\n\n\n\n\n\n  \n\n\n\n\nContents of my Thesis\n\n\n\n\n\n\n\nContents\n\n\n\n\n\n\n\n\n\n\n\nDec 19, 2022\n\n\nSam Llanwarne\n\n\n\n\n\n\n  \n\n\n\n\nPlan of things I will write about\n\n\n\n\n\n\n\nMeta\n\n\n\n\n\n\n\n\n\n\n\nDec 19, 2022\n\n\nSam Llanwarne\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "old_blog.html",
    "href": "old_blog.html",
    "title": "Blog",
    "section": "",
    "text": "No matching items"
  },
  {
    "objectID": "old_howTo.html",
    "href": "old_howTo.html",
    "title": "How To",
    "section": "",
    "text": "Making an App\n\n\n\n\n\n\n\nHow To\n\n\n\n\n\n\n\n\n\n\n\nDec 20, 2022\n\n\nSam Llanwarne\n\n\n\n\n\n\n  \n\n\n\n\nMaking a Blog\n\n\n\n\n\n\n\nHow To\n\n\n\n\n\n\n\n\n\n\n\nDec 19, 2022\n\n\nSam Llanwarne\n\n\n\n\n\n\n  \n\n\n\n\nPlan of entries for this how to guide\n\n\n\n\n\n\n\nMeta\n\n\n\n\n\n\n\n\n\n\n\nDec 19, 2022\n\n\nSam Llanwarne\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "old_index.html",
    "href": "old_index.html",
    "title": "Home",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "old_paperSummaries.html",
    "href": "old_paperSummaries.html",
    "title": "Paper Summaries",
    "section": "",
    "text": "Automated acquisition of explainable knowledge from unannotated histopathology images\n\n\n\n\n\n\n\nExplain\n\n\nHisto\n\n\nCancer\n\n\n\n\n\n\n\n\n\n\n\nJan 5, 2023\n\n\nSam Llanwarne\n\n\n\n\n\n\n  \n\n\n\n\nPlan guiding which areas of the literature to read\n\n\n\n\n\n\n\nMeta\n\n\n\n\n\n\n\n\n\n\n\nDec 19, 2022\n\n\nSam Llanwarne\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "paperSummaries/explainability-from-histo-images/index.html",
    "href": "paperSummaries/explainability-from-histo-images/index.html",
    "title": "Automated acquisition of explainable knowledge from unannotated histopathology images",
    "section": "",
    "text": "The authors use deep learning to generate explainable features which are used to predict prostate cancer reoccurence.\n\nMy Preliminary Questions\n\nWhat are explainable features?\nAnd how are they derived?\nAnd how are they used to predict cancer reoccurence?\n\n\n\nSummary"
  },
  {
    "objectID": "paperSummaries/things-to-read-tags/index.html",
    "href": "paperSummaries/things-to-read-tags/index.html",
    "title": "Plan guiding which areas of the literature to read",
    "section": "",
    "text": "Things to read\nHere I discuss areas of the literature I plan to read.\nAt the moment, the main types of paper that I can think of to read fall into the following categories:\n\nHistology [Histo]\nClassification [Class]\nCell analysis [Cells]\nImmunohistochemical [IHC]\nTumour [Cancer]\nLymphoma [Lymph]\nLymphoma types [Lymph Types]\nAssistive tools [Med Help]\nDeep Learning [Deep Learning]\nArtificial Intelligence [AI]\nNovel findings [Novel]\nExplainability [Explain]\nShort papers [Short]\nLong papers [Long]\n\nand maybe some other categories I have not thought of yet.\nEach post may end up having a lot of tags, which will also contribute to summarising the papers."
  },
  {
    "objectID": "paperSummaries.html",
    "href": "paperSummaries.html",
    "title": "Paper Summaries",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\nAutomated acquisition of explainable knowledge from unannotated histopathology images\n\n\n\n\n\n\n\nExplain\n\n\nHisto\n\n\nCancer\n\n\n\n\n\n\n\n\n\n\n\nJan 5, 2023\n\n\nSam Llanwarne\n\n\n\n\n\n\n  \n\n\n\n\nPlan guiding which areas of the literature to read\n\n\n\n\n\n\n\nMeta\n\n\n\n\n\n\n\n\n\n\n\nDec 19, 2022\n\n\nSam Llanwarne\n\n\n\n\n\n\nNo matching items"
  }
]