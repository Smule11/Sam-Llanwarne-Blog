[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Sam Llanwarne Blog",
    "section": "",
    "text": "Making a Blog\n\n\n\n\n\n\n\nHow To\n\n\n\n\n\n\n\n\n\n\n\nDec 19, 2022\n\n\nSam Llanwarne\n\n\n\n\n\n\n  \n\n\n\n\nTo Do\n\n\n\n\n\n\n\nTo Do\n\n\n\n\n\n\n\n\n\n\n\nDec 19, 2022\n\n\nSam Llanwarne\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\n\n\n\n\n\nDec 15, 2022\n\n\nSam Llanwarne\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/making-a-blog/index.html",
    "href": "posts/making-a-blog/index.html",
    "title": "Making a Blog",
    "section": "",
    "text": "Making a Blog\nHere I try to succinctly explain how I made this blog.\nI also wish to be able to make the blog with minimal effort, while still having all the desired functionalities.\n\n\n\nSimple Instructions\n A) Download and Install a couple of things\nI create this .ipynb notebook file, called index.ipynb. \nI installed Quarto\nI installed the Quarto extension in VS Code \nI create an empty github repo online, with no readme file.\nI create an empty folder/directory/repo locally/offline with a similar/the same name.\n B) https://quarto.org/docs/websites/website-blog.html\nI open this folder in VS Code and begin to follow the instructions here https://quarto.org/docs/websites/website-blog.html\n do ctrl-shit-p and type Quarto Create Project, click it, click create blog, and create a new folder for the blog files. \nI then go into the terminal and cd into this new folder, and run these commands, to move the local files online.\ngit init \ngit add .\ngit commit -m \"add my files\"\ngit remote add origin <YOUR_NEW_EMPTY_GITHUB_REPO_URL>.git\ngit branch -M main\ngit push -u origin main\nI add some YAML code in the top cell, to tell the Quarto files how to position the notebook in the website. This YAML cell should be first and of the type Raw. Again see the link above on how to do this. \nI then make a folder in the posts folder, and copy this .ipynb notebook file there. It should be called index.ipynb so Quarto knows to publish it.\n C) https://quarto.org/docs/publishing/github-pages.html\nI change the _quarto.yml file, to say publish to docs, not in posts. \nI make sure I am in the write folder/directory and add a .nojekyll as they say in the link above. \nI can push the local changes to github online through VS code.\nI change the pages tab in the settings on Github to say publish from the docs folder, making the website go live. \nI changed the theme to have a dark and light one, as in the link above.\n \n\n\n\nMotivation\nThe point of this blog is - to practice public writing - to practice science communication - to summarise technical work I did - to summarise How To’s such as this, where I do something once, which is not trivial, and I want to record how to do it, for other people and for future reference. - for my CV - as a record of papers I’ve read - as a log of my thoughts - to inspire others to do the same and to create some sort of small, shallow community online of well intentioned people.\nThis will become the first entry into my blog online. Each entry will be a jupyter notebook embedded into a HTML template.\nI am following Bailey’s blog which has led me on a chain through fastai’s nbdev websites and ultimately to Quarto’s blogging website.\nI am writing things down as I go.\nEssentially fastAI say they created a package called fastpages to incorporate notebook blogging into the Jekyll templates (they say at the time no one else had a notebook integration into Jekyll blog package). Then they say that Quarto was published, and this is a better way to blog with notebooks. They now integrated Quarto into nbdev and provide a way to migrate from their Jekyll based blogging template to their Quarto based blogging template. I played around trying to get nbdev to work, but then realised nbdev say on their website if you just want the blogging side of things, its less bloat and easier to only install Quarto.\nQuarto isn’t based on Jekyll (Github’s blogging template).\n\n\n\nOther blogs\nCreating a blog in a template is easier than coding a website yourself, although I still think this is very easy for a basic website. But incorporating more complex features and making it look nicer is easier with a template. Jekyll is one template people use:\n\nRebecca Stone | github code\n[Mary Paterson] (hyperlink) | github code\nFabian Fuchs | github code\n\nBut I agreed with Bailey, that doing a template that centres on .ipynb notebooks rather than straight .md markdown files is slightly better, as notebooks include markdown cells, but also code cells. So you can run code offline and the blog post can be more easily code centred. Also other people can copy the notebook and run it themselves which is useful.\nA Nbdev Blog\n\nBailey’s blog.\n\nA Quarto blog\n\nDanielle Navarro | github code Although she has many (github.io?) websites linking together from this page | github code\n\nA more homemade blog:\n\nChris Frewin basically saying:\n\nfollow your heart\nwhen you work at a startup you feel a real affinity with for a career\n\nbest work, most rewards.\n\nwhen you work for yourself if you want and you have the drive\n\nmost work, variable rewards, potentially v good or v bad.\n\nthere’s no real reason to work at a big company except it can make you look “good” to other employers\n\nworst work, a consistent but less than average reward.\n\n\n\n\n\n\nWalkthrough\nI created this notebook file you’re reading. (I did this by creating a text file and changing the name from “untitled.txt” to “index.ipynb”. Changing the file extension from .txt to .ipynb is important.)\nTo open and read this .ipynb file I am editing it in Visual Studio Code. (A lot of people use Jupyter Notebook.)\n\n\nnbdev blog process (stopped halfway through and changed to Quarto)\n\n\n\nHalfway through when I went to install nbdev and looked into how it worked and reading their documentation (see the bit at the bottom here https://nbdev.fast.ai/tutorials/blogging.html) I saw that nbdev is a general notebook development package, and they used to offer the first extension to Jekyll (Githubs blogging template) which allowed for the insertion of notebooks into the blogs, called fastpages, but now they say Quarto is simpler if you only want to blog.\nI went to follow Bailey’s blog\n\n\nFailed Quick Attempt Which Almost Worked\n\n\n\nI tried a quick method to fork Bailey’s github to my github, creating a new repo. \nI opened github desktop which is connected to my online github account, and chose to clone the online blog repo to a local folder on my computer. Here I can edit the blog files. \nI closed github desktop, and can edit the files in VS code now. There are many other ways to clone a repository to your local device!\nI could do another blog on setting up Github in VS code. Making this blog is a good learning experience with Github too (like any casual sustained effort is a good experience).\nI then deleted all the current blog .ipynb files in the Blog folder locally, and inserted this file into the nbs folder. Here in VS code I now stage, commit and push the changes to the online repo. \nnb. The main index file which is the home page which I should edit.\n I went into the online github repo and the files had been updated. This .ipynb making a blog notebook was there. I then went into settings and on the side found Pages, and chose the branch to make the website active. I chose the main default branch. I refresh the page, the website is live. \nBUT… Things did not work 100% because when I was making the .ipynb blog posts I shouldn’t just copy Bailey’s and make the .ipynb notebooks manually. I should make them with nbdev. This is because the nbdev command to make an ipynb seems to manage and update all the extra files in the repository/folder which embed the notebook in the HTML website.\n\n\nAfter just trying to clone Bailey’s nbdev blog repo, I realised I really should do a new nbdev install to get a new template of the blog in a new repo. When you run new nbdev to populate the empty repo it contains user specific info, so cloning will copy across the old user’s name and stuff. Also you need nbdev to create a notebook, as it simultaneously adjusts other files to recognise this new notebook.\n\n\nHi Chat_GPT, can you explain what nbdev_new is?\n\n\n\n‘nbdev_new’ is a command provided by the ‘nbdev’ library, which is a tool for developing and documenting Python projects using Jupyter notebooks. The ‘nbdev_new’ command is used to create a new project directory structure and initial configuration files for a project that will be developed with ‘nbdev’.\nHere is an example of how to use ‘nbdev_new’ to create a new project:\n$ nbdev_new my_project\nThis will create a new directory called ‘my_project’ with the following structure:\nmy_project/\n├── README.md\n├── index.ipynb\n├── docs/\n│   ├── index.ipynb\n├── nbdev/\n│   ├── __init__.py\n│   ├── core.py\n│   ├── tests/\n│   └── ...\n├── setup.py\n└── requirements.txt\nThe ‘README.md’ file contains information about your project, and the ‘index.ipynb’ file is the entry point for your documentation. The ‘docs’ directory contains the source notebooks for your documentation, and the ‘nbdev’ directory contains the source code for your project. The ‘setup.py’ file is used to package your project for distribution, and the ‘requirements.txt’ file lists the dependencies that your project needs.\nYou can then use the ‘nbdev’ library to build and publish your project, as well as to generate documentation from the notebooks in the ‘docs’ directory.\n\n\nUsing Github Desktop to clone a new repo down from Github.com to your local desktop is decently easy, and includes the .git file which connects it with the online branch too which is good. SO actually I am growing used to Github Desktop now, after a couple of stop-start hesitations. Bailey cloned it down using the terminal and the git command “git clone …” and this works well too. There are a few ways to clone an online repo to local storage in a way which creates a .git file.\nI clone the online empty Github repo notebookBlog down to my local computer using Github Desktop. \nWe need to install nbdev, which contains the python command package nbdev_new to instantiate a blog specific to us.\nI realise I should have created a new python environment, so I could fully work out which packages are needed (maybe I already have some installed which I won’t mention here). But I am just using my main environment which already has some packages/modules installed.\nTo see more about nbdev, https://pypi.org/project/nbdev/\nI run pip install nbdev in the terminal. \nThen, still roughly following Bailey’s blog, I cd (change directory) into the empty repo/folder in a terminal, and go into python and run the line -\nnbdev_new \nThings don’t work and I question what I’m doing and go back to the documentation. Here I realise that I am perhaps unnecessarily going through nbdev to use Quarto, and maybe it is simpler to just use Quarto straight. I give up with nbdev and go to use Quarto.\n\n\nTo change hard drive, in a windows terminal I google’d it https://www.digitalcitizen.life/command-prompt-how-use-basic-commands/ and it says just to first type D: or C: to change the drive, and then go cd filepath.\n A) https://quarto.org/docs/websites/website-blog.html\nI am following the steps in this Quarto Website blog guide.\nThey say you can use VS Code or the Terminal or RStudio. I use VS Code.\nI installed Quarto\n(Accidentally to the wrong place on my computer but oh well…)\nI installed the Quarto extension in VS Code \nI create an empty github repo online, with no readme file, named Sam Llanwarne Blog.\nI create an empty folder/directory/repo locally with a similar/the same name.\nI open this folder in VS Code and do ctrl-shit-p and type Quarto Create Project, click it, click create blog, and create a new folder for the blog files. \nSo we have an online empty git repo, and the blog files offline locally.\nI then go into the terminal and cd into this new folder, and run these commands, to move the local files online.\ngit init \ngit add .\ngit commit -m \"add my files\"\ngit remote add origin <YOUR_NEW_EMPTY_GITHUB_REPO_URL>.git\ngit branch -M main\ngit push -u origin main\n\nI found some of these git commands here and the rest on the github website.\nQuarto is, at its heart, just software which slightly tidies up R and Python markdown scripts into cleaner versions, for scientific publishing.\nI realised I have to edit the .ipynb notebook file slightly, see here https://quarto.org/docs/tools/vscode.html. I specifically scrolled down to the section on notebooks, Notebook Editor. This gave some of the final information on how to structure the .ipynb or .qmd files.\nI add some YAML code in the top cell, to tell the Quarto files how to position the notebook in the website. This YAML cell should be first and of the type Raw. Again see the link above on how to do this. \nI then make a folder in the posts folder, and copy this .ipynb notebook file there. It should be called index.ipynb so Quarto knows to publish it.\n B) https://quarto.org/docs/publishing/github-pages.html\nNow we’re on the Quarto Github Publishing page.\nI change the _quarto.yml file, to say publish to docs, not in posts. \nI make sure I am in the write folder/directory and add a .nojekyll as they say in the link above. \nI can push the local changes to github online through VS code.\nI can also preview the changes locally.\nThe overall plan for managing this blog, is to either make changes locally or online and then commit (and push to the online repo if the changes are local).\nI can do a blog on using github in VS code, but not sure 100% how I will frame that, although it will be good.\nI change the pages tab in the settings on Github to say publish from the docs folder, making the website go live. \nApparently I should add a .gitignore to ignore a couple of the crazy folders or something, as they might change a lot.\n C) https://quarto.org/docs/output-formats/html-themes.html Now I looked at changing the theme.\nI changed the theme to have a dark and light one, as in the link above.\nEssentially, each post is edited in posts.\nThe YAML at the top of each .ipynb or .qmd file controls the appearance of that file. e.g. * tags * contents side bar * date * blog name * potentially the blog summary * position of features, colours etc.\nYou can change the theme, add images and change the layout of the home page easily too.\nFor example, go into the main homepage index.qmd file, and you can change type from default, to grid, to tabel :)\nThanks for reading!\n \n \n\n Text in this colour are the actions I took \n Text in this colour are obsolete actions I took \nSome useful website links\n\nQuarto\nHTML Colours\nUnsplash - open source images"
  },
  {
    "objectID": "posts/things-to-add-to-blog/index.html",
    "href": "posts/things-to-add-to-blog/index.html",
    "title": "To Do",
    "section": "",
    "text": "To change\nMaking a list of things to do here…\n\nTo add a comments section"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "Welcome!\nThis is a template post from Quarto.\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  }
]